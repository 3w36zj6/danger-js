[
  {
    "scope": "https://gitlab.com:443",
    "method": "GET",
    "path": "/api/v4/projects/gitlab-org%2Fgitlab-foss/merge_requests/27117/diffs",
    "body": "",
    "status": 200,
    "response": [
      {
        "diff": "@@ -1,5 +1,7 @@\n # frozen_string_literal: true\n \n+require 'digest/md5'\n+\n MESSAGE = <<MARKDOWN\n ## Reviewer roulette\n \n@@ -29,17 +31,22 @@ Please consider creating a merge request to\n for them.\n MARKDOWN\n \n-def spin(team, project, category)\n+def spin(team, project, category, branch_name)\n+  rng = Random.new(Digest::MD5.hexdigest(branch_name).to_i(16))\n+\n   reviewers = team.select { |member| member.reviewer?(project, category) }\n   traintainers = team.select { |member| member.traintainer?(project, category) }\n   maintainers = team.select { |member| member.maintainer?(project, category) }\n \n   # TODO: filter out people who are currently not in the office\n+  # https://gitlab.com/gitlab-org/gitlab-ce/issues/57652\n+  #\n   # TODO: take CODEOWNERS into account?\n+  # https://gitlab.com/gitlab-org/gitlab-ce/issues/57653\n \n   # Make traintainers have triple the chance to be picked as a reviewer\n-  reviewer = (reviewers + traintainers + traintainers).sample\n-  maintainer = maintainers.sample\n+  reviewer = (reviewers + traintainers + traintainers).sample(random: rng)\n+  maintainer = maintainers.sample(random: rng)\n \n   \"| #{helper.label_for_category(category)} | #{reviewer&.markdown_name} | #{maintainer&.markdown_name} |\"\n end\n@@ -65,6 +72,12 @@ categories = changes.keys - [:unknown]\n # CSS Clean up MRs are reviewed using a slightly different process, so we\n # disable the review roulette for such MRs.\n if changes.any? && !gitlab.mr_labels.include?('single codebase') && !gitlab.mr_labels.include?('CSS cleanup')\n+  # Strip leading and trailing CE/EE markers\n+  canonical_branch_name = gitlab\n+                            .mr_json['source_branch']\n+                            .gsub(/^[ce]e-/, '')\n+                            .gsub(/-[ce]e$/, '')\n+\n   team =\n     begin\n       helper.project_team\n@@ -79,7 +92,7 @@ if changes.any? && !gitlab.mr_labels.include?('single codebase') && !gitlab.mr_l\n   project = helper.project_name\n   unknown = changes.fetch(:unknown, [])\n \n-  rows = categories.map { |category| spin(team, project, category) }\n+  rows = categories.map { |category| spin(team, project, category, canonical_branch_name) }\n \n   markdown(MESSAGE)\n   markdown(CATEGORY_TABLE_HEADER + rows.join(\"\\n\")) unless rows.empty?\n",
        "new_path": "danger/roulette/Dangerfile",
        "old_path": "danger/roulette/Dangerfile",
        "a_mode": "100644",
        "b_mode": "100644",
        "new_file": false,
        "renamed_file": false,
        "deleted_file": false,
        "generated_file": null
      }
    ]
  }
]
